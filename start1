public int start1(int[] a, int[] b) {
  int l1=a.length;
  int l2=b.length;

if(l1!=0 && l2!=0)    // A better implementation would be to count the 1's directly
 {
  if(a[0]==1 && b[0]==1)
  return 2;
  if(a[0]==1 || b[0]==1)
  return 1;
  return 0;
}
if((l1!=0 && a[0]==1)  || (l2!=0 && b[0]==1))
return 1;
return 0;
}

public int[] biggerTwo(int[] a, int[] b) 
{
  int s1=a[0]+a[1];
  int s2=b[0]+b[1];
  return s1 >= s2 ? a:b;
}

public int[] makeMiddle(int[] nums) {
  int l=nums.length-1;
  int mid1=l/2, mid2=l/2+1;
  return new int []{nums[mid1],nums[mid2]};
}

public int[] plusTwo(int[] a, int[] b) {
  int []temp={a[0],a[1],b[0],b[1]};
  return temp;
}


